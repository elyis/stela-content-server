// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using STELA_CONTENT.Infrastructure.Data;

#nullable disable

namespace STELA_CONTENT.Infrastructure.Migrations
{
    [DbContext(typeof(ContentDbContext))]
    [Migration("20240714074731_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.AdditionalService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.Memorial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("StelaHeight")
                        .HasColumnType("real");

                    b.Property<float>("StelaLength")
                        .HasColumnType("real");

                    b.Property<float>("StelaWidth")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Memorials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.MemorialMaterial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hex")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.MemorialMaterials", b =>
                {
                    b.Property<Guid>("MemorialId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid");

                    b.HasKey("MemorialId", "MaterialId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MemorialMaterials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.PortfolioMemorial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CemeteryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PortfolioMemorials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.PortfolioMemorialMaterials", b =>
                {
                    b.Property<Guid>("MemorialMaterialId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PortfolioMemorialId")
                        .HasColumnType("uuid");

                    b.HasKey("MemorialMaterialId", "PortfolioMemorialId");

                    b.HasIndex("PortfolioMemorialId");

                    b.ToTable("PortfolioMemorialMaterials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.MemorialMaterials", b =>
                {
                    b.HasOne("STELA_CONTENT.Core.Entities.Models.MemorialMaterial", "Material")
                        .WithMany("Memorials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STELA_CONTENT.Core.Entities.Models.Memorial", "Memorial")
                        .WithMany("Materials")
                        .HasForeignKey("MemorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Memorial");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.PortfolioMemorialMaterials", b =>
                {
                    b.HasOne("STELA_CONTENT.Core.Entities.Models.MemorialMaterial", "Material")
                        .WithMany("PortfolioMemorialMaterials")
                        .HasForeignKey("MemorialMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STELA_CONTENT.Core.Entities.Models.PortfolioMemorial", "PortfolioMemorial")
                        .WithMany("Materials")
                        .HasForeignKey("PortfolioMemorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("PortfolioMemorial");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.Memorial", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.MemorialMaterial", b =>
                {
                    b.Navigation("Memorials");

                    b.Navigation("PortfolioMemorialMaterials");
                });

            modelBuilder.Entity("STELA_CONTENT.Core.Entities.Models.PortfolioMemorial", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
